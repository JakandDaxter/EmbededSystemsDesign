-------------------------------------------------------------------------------
-- Aliana Tejeda
-- Top
--(  )_(  )
--(= '.' =)('')
--('')_('')
-------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;
use work.components_include.all;

entity Top is

    port (

    ---- PWM Output ----

  	PWM : out std_logic;

    ----- CLOCK -----
 
    CLOCK_50 : in std_logic;

    ----- SEG7 -----
    HEX5 : out std_logic_vector(6 downto 0);
    HEX4 : out std_logic_vector(6 downto 0);
    HEX3 : out std_logic_vector(6 downto 0);--make this go blank
    HEX2 : out std_logic_vector(6 downto 0);
    HEX1 : out std_logic_vector(6 downto 0);
    HEX0 : out std_logic_vector(6 downto 0);  


    ----- KEY -----
    KEY : in std_logic_vector(3 downto 0); --remeber to use key(0) for reset


    ----- SW -----
    SW : in  std_logic_vector(7 downto 0) 
	    
  	 );
	                  
end Top;  

architecture ServoMotor of Top  is


--------------------------------------
--Constants
--------------------------------------
constant MinAngle							: std_logic_vector(31 downto 0):= X"0000C350"; --45
constant MaxAngle							: std_logic_vector(31 downto 0):= X"000186A0"; --135 
--Signals

    
signal reset_n 							:std_logic;
signal key0_d1 					  		:std_logic;
signal key0_d2 							:std_logic;
signal key0_d3 							:std_logic;





BEGIN --We begin the ARCHITECTUREE

----- Synchronize the reset

		synchReset_proc : process (CLOCK_50) begin
		  if (rising_edge(CLOCK_50)) then
		    key0_d1 <= KEY(0);
		    key0_d2 <= key0_d1;
		    key0_d3 <= key0_d2;
		  end if;
		end process synchReset_proc;
		reset_n <= key0_d3;
--*******************************************************************************************************************************************************************************--
--*******************************************************************************************************************************************************************************--  
--*******************************************************************************************************************************************************************************--  
--*******************************************************************************************************************************************************************************-- 	
Angle_Counter: generic_counter_Angle
        Port Map(
        clk                 =>   CLOCK_50,
        reset               =>   reset_n,
        PWM                 =>   PWM
        );
--*******************************************************************************************************************************************************************************--
--*******************************************************************************************************************************************************************************-- 
--*******************************************************************************************************************************************************************************--  
--*******************************************************************************************************************************************************************************--  
--*******************************************************************************************************************************************************************************--  
      
        
end ServoMotor;