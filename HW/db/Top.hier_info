|Top
PWM << generic_counter_Angle:Angle_Counter.PWM
CLOCK_50 => memory:Memory_for_display.clk
CLOCK_50 => LEDR[0]~reg0.CLK
CLOCK_50 => LEDR[1]~reg0.CLK
CLOCK_50 => LEDR[2]~reg0.CLK
CLOCK_50 => LEDR[3]~reg0.CLK
CLOCK_50 => LEDR[4]~reg0.CLK
CLOCK_50 => LEDR[5]~reg0.CLK
CLOCK_50 => key0_d3.CLK
CLOCK_50 => key0_d2.CLK
CLOCK_50 => key0_d1.CLK
CLOCK_50 => synchronizer8bit:A_Synchonizer.clk
CLOCK_50 => synchronizer8bit:B_Synchonizer.clk
CLOCK_50 => FSM_Servo:The_State_MachineF.clk
CLOCK_50 => FSM_Angle:The_State_MachineA.clk
CLOCK_50 => generic_counter_Time:Timing_Counter.clk
CLOCK_50 => generic_counter_Angle:Angle_Counter.clk
CLOCK_50 => BCD:The_Dab_Display0.clk
CLOCK_50 => BCD:The_Dab_Display1.clk
CLOCK_50 => BCD:The_Dab_Display2.clk
HEX5[0] << BCD:The_Dab_Display0.Hex[0]
HEX5[1] << BCD:The_Dab_Display0.Hex[1]
HEX5[2] << BCD:The_Dab_Display0.Hex[2]
HEX5[3] << BCD:The_Dab_Display0.Hex[3]
HEX5[4] << BCD:The_Dab_Display0.Hex[4]
HEX5[5] << BCD:The_Dab_Display0.Hex[5]
HEX5[6] << BCD:The_Dab_Display0.Hex[6]
HEX4[0] << BCD:The_Dab_Display1.Hex[0]
HEX4[1] << BCD:The_Dab_Display1.Hex[1]
HEX4[2] << BCD:The_Dab_Display1.Hex[2]
HEX4[3] << BCD:The_Dab_Display1.Hex[3]
HEX4[4] << BCD:The_Dab_Display1.Hex[4]
HEX4[5] << BCD:The_Dab_Display1.Hex[5]
HEX4[6] << BCD:The_Dab_Display1.Hex[6]
HEX3[0] << BCD:The_Dab_Display2.Hex[0]
HEX3[1] << BCD:The_Dab_Display2.Hex[1]
HEX3[2] << BCD:The_Dab_Display2.Hex[2]
HEX3[3] << BCD:The_Dab_Display2.Hex[3]
HEX3[4] << BCD:The_Dab_Display2.Hex[4]
HEX3[5] << BCD:The_Dab_Display2.Hex[5]
HEX3[6] << BCD:The_Dab_Display2.Hex[6]
HEX2[0] << comb.DB_MAX_OUTPUT_PORT_TYPE
HEX2[1] << HEX2[1].DB_MAX_OUTPUT_PORT_TYPE
HEX2[2] << HEX2[2].DB_MAX_OUTPUT_PORT_TYPE
HEX2[3] << HEX2[3].DB_MAX_OUTPUT_PORT_TYPE
HEX2[4] << HEX2[4].DB_MAX_OUTPUT_PORT_TYPE
HEX2[5] << HEX2[5].DB_MAX_OUTPUT_PORT_TYPE
HEX2[6] << HEX2[6].DB_MAX_OUTPUT_PORT_TYPE
KEY[0] => FSM_Angle:The_State_MachineA.KEY[0]
KEY[0] => key0_d1.DATAIN
KEY[1] => FSM_Angle:The_State_MachineA.KEY[1]
KEY[2] => FSM_Angle:The_State_MachineA.KEY[2]
KEY[3] => FSM_Angle:The_State_MachineA.KEY[3]
LEDR[0] << LEDR[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] << LEDR[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] << LEDR[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] << LEDR[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] << LEDR[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[5] << LEDR[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~


|Top|memory:Memory_for_display
clk => RAM~9.CLK
clk => RAM~0.CLK
clk => RAM~1.CLK
clk => RAM~2.CLK
clk => RAM~3.CLK
clk => RAM~4.CLK
clk => RAM~5.CLK
clk => RAM~6.CLK
clk => RAM~7.CLK
clk => RAM~8.CLK
clk => dout[0]~reg0.CLK
clk => dout[1]~reg0.CLK
clk => dout[2]~reg0.CLK
clk => dout[3]~reg0.CLK
clk => dout[4]~reg0.CLK
clk => dout[5]~reg0.CLK
clk => dout[6]~reg0.CLK
clk => dout[7]~reg0.CLK
clk => RAM.CLK0
we => RAM~9.DATAIN
we => RAM.WE
addr[0] => RAM~0.DATAIN
addr[0] => RAM.WADDR
addr[0] => RAM.RADDR
addr[1] => ~NO_FANOUT~
din[0] => RAM~8.DATAIN
din[0] => RAM.DATAIN
din[1] => RAM~7.DATAIN
din[1] => RAM.DATAIN1
din[2] => RAM~6.DATAIN
din[2] => RAM.DATAIN2
din[3] => RAM~5.DATAIN
din[3] => RAM.DATAIN3
din[4] => RAM~4.DATAIN
din[4] => RAM.DATAIN4
din[5] => RAM~3.DATAIN
din[5] => RAM.DATAIN5
din[6] => RAM~2.DATAIN
din[6] => RAM.DATAIN6
din[7] => RAM~1.DATAIN
din[7] => RAM.DATAIN7
dout[0] <= dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top|synchronizer8bit:A_Synchonizer
clk => flop2[0].CLK
clk => flop2[1].CLK
clk => flop2[2].CLK
clk => flop2[3].CLK
clk => flop2[4].CLK
clk => flop2[5].CLK
clk => flop2[6].CLK
clk => flop2[7].CLK
clk => flop1[0].CLK
clk => flop1[1].CLK
clk => flop1[2].CLK
clk => flop1[3].CLK
clk => flop1[4].CLK
clk => flop1[5].CLK
clk => flop1[6].CLK
clk => flop1[7].CLK
reset => flop2[0].ACLR
reset => flop2[1].ACLR
reset => flop2[2].ACLR
reset => flop2[3].ACLR
reset => flop2[4].ACLR
reset => flop2[5].ACLR
reset => flop2[6].ACLR
reset => flop2[7].ACLR
reset => flop1[0].ACLR
reset => flop1[1].ACLR
reset => flop1[2].ACLR
reset => flop1[3].ACLR
reset => flop1[4].ACLR
reset => flop1[5].ACLR
reset => flop1[6].ACLR
reset => flop1[7].ACLR
async_in[0] => flop1[0].DATAIN
async_in[1] => flop1[1].DATAIN
async_in[2] => flop1[2].DATAIN
async_in[3] => flop1[3].DATAIN
async_in[4] => flop1[4].DATAIN
async_in[5] => flop1[5].DATAIN
async_in[6] => flop1[6].DATAIN
async_in[7] => flop1[7].DATAIN
sync_out[0] <= flop2[0].DB_MAX_OUTPUT_PORT_TYPE
sync_out[1] <= flop2[1].DB_MAX_OUTPUT_PORT_TYPE
sync_out[2] <= flop2[2].DB_MAX_OUTPUT_PORT_TYPE
sync_out[3] <= flop2[3].DB_MAX_OUTPUT_PORT_TYPE
sync_out[4] <= flop2[4].DB_MAX_OUTPUT_PORT_TYPE
sync_out[5] <= flop2[5].DB_MAX_OUTPUT_PORT_TYPE
sync_out[6] <= flop2[6].DB_MAX_OUTPUT_PORT_TYPE
sync_out[7] <= flop2[7].DB_MAX_OUTPUT_PORT_TYPE


|Top|synchronizer8bit:B_Synchonizer
clk => flop2[0].CLK
clk => flop2[1].CLK
clk => flop2[2].CLK
clk => flop2[3].CLK
clk => flop2[4].CLK
clk => flop2[5].CLK
clk => flop2[6].CLK
clk => flop2[7].CLK
clk => flop1[0].CLK
clk => flop1[1].CLK
clk => flop1[2].CLK
clk => flop1[3].CLK
clk => flop1[4].CLK
clk => flop1[5].CLK
clk => flop1[6].CLK
clk => flop1[7].CLK
reset => flop2[0].ACLR
reset => flop2[1].ACLR
reset => flop2[2].ACLR
reset => flop2[3].ACLR
reset => flop2[4].ACLR
reset => flop2[5].ACLR
reset => flop2[6].ACLR
reset => flop2[7].ACLR
reset => flop1[0].ACLR
reset => flop1[1].ACLR
reset => flop1[2].ACLR
reset => flop1[3].ACLR
reset => flop1[4].ACLR
reset => flop1[5].ACLR
reset => flop1[6].ACLR
reset => flop1[7].ACLR
async_in[0] => flop1[0].DATAIN
async_in[1] => flop1[1].DATAIN
async_in[2] => flop1[2].DATAIN
async_in[3] => flop1[3].DATAIN
async_in[4] => flop1[4].DATAIN
async_in[5] => flop1[5].DATAIN
async_in[6] => flop1[6].DATAIN
async_in[7] => flop1[7].DATAIN
sync_out[0] <= flop2[0].DB_MAX_OUTPUT_PORT_TYPE
sync_out[1] <= flop2[1].DB_MAX_OUTPUT_PORT_TYPE
sync_out[2] <= flop2[2].DB_MAX_OUTPUT_PORT_TYPE
sync_out[3] <= flop2[3].DB_MAX_OUTPUT_PORT_TYPE
sync_out[4] <= flop2[4].DB_MAX_OUTPUT_PORT_TYPE
sync_out[5] <= flop2[5].DB_MAX_OUTPUT_PORT_TYPE
sync_out[6] <= flop2[6].DB_MAX_OUTPUT_PORT_TYPE
sync_out[7] <= flop2[7].DB_MAX_OUTPUT_PORT_TYPE


|Top|FSM_Servo:The_State_MachineF
clk => Present_State[0].CLK
clk => Present_State[1].CLK
clk => Present_State[2].CLK
clk => Present_State[3].CLK
reset => Present_State[0].PRESET
reset => Present_State[1].PRESET
reset => Present_State[2].ACLR
reset => Present_State[3].PRESET
Write_en => ~NO_FANOUT~
Max_Interrupt => Next_State.OUTPUTSELECT
Max_Interrupt => Next_State.OUTPUTSELECT
Max_Interrupt => Next_State.OUTPUTSELECT
Max_Interrupt => Next_State.OUTPUTSELECT
Max_Interrupt => Next_State.OUTPUTSELECT
Max_Interrupt => Next_State.OUTPUTSELECT
Max_Interrupt => Next_State.OUTPUTSELECT
Max_Interrupt => Next_State.OUTPUTSELECT
Min_Interrupt => Next_State.OUTPUTSELECT
Min_Interrupt => Next_State.OUTPUTSELECT
Min_Interrupt => Next_State.OUTPUTSELECT
Min_Interrupt => Next_State.OUTPUTSELECT
Min_Interrupt => Next_State.OUTPUTSELECT
Min_Interrupt => Next_State.OUTPUTSELECT
Min_Interrupt => Next_State.OUTPUTSELECT
Min_Interrupt => Next_State.OUTPUTSELECT
state[0] <= Present_State[0].DB_MAX_OUTPUT_PORT_TYPE
state[1] <= Present_State[1].DB_MAX_OUTPUT_PORT_TYPE
state[2] <= Present_State[2].DB_MAX_OUTPUT_PORT_TYPE
state[3] <= Present_State[3].DB_MAX_OUTPUT_PORT_TYPE


|Top|FSM_Angle:The_State_MachineA
clk => Write_en~reg0.CLK
clk => Start_Servo~reg0.CLK
clk => Present_State[0].CLK
clk => Present_State[1].CLK
clk => Present_State[2].CLK
clk => Present_State[3].CLK
clk => Present_State[4].CLK
clk => Present_State[5].CLK
reset => Present_State[0].PRESET
reset => Present_State[1].ACLR
reset => Present_State[2].ACLR
reset => Present_State[3].ACLR
reset => Present_State[4].ACLR
reset => Present_State[5].ACLR
reset => Write_en~reg0.ACLR
reset => Start_Servo~reg0.ACLR
verfiedMin => Next_State.OUTPUTSELECT
verfiedMin => Next_State.OUTPUTSELECT
verfiedMin => Next_State.OUTPUTSELECT
verfiedMin => Next_State.OUTPUTSELECT
verfiedMin => Next_State.OUTPUTSELECT
verfiedMin => Next_State.OUTPUTSELECT
verfiedMin => Write_en.OUTPUTSELECT
verfiedMax => Next_State.OUTPUTSELECT
verfiedMax => Next_State.OUTPUTSELECT
verfiedMax => Next_State.OUTPUTSELECT
verfiedMax => Next_State.OUTPUTSELECT
verfiedMax => Next_State.OUTPUTSELECT
verfiedMax => Next_State.OUTPUTSELECT
verfiedMax => Write_en.DATAA
verfiedMax => Start_Servo~reg0.DATAIN
Write_en <= Write_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
Start_Servo <= Start_Servo~reg0.DB_MAX_OUTPUT_PORT_TYPE
KEY[0] => ~NO_FANOUT~
KEY[1] => ~NO_FANOUT~
KEY[2] => Next_State.OUTPUTSELECT
KEY[2] => Next_State.OUTPUTSELECT
KEY[2] => Next_State.OUTPUTSELECT
KEY[2] => Next_State.OUTPUTSELECT
KEY[2] => Next_State.OUTPUTSELECT
KEY[2] => Next_State.OUTPUTSELECT
KEY[3] => Next_State.OUTPUTSELECT
KEY[3] => Next_State.OUTPUTSELECT
KEY[3] => Next_State.OUTPUTSELECT
KEY[3] => Next_State.OUTPUTSELECT
KEY[3] => Next_State.OUTPUTSELECT
KEY[3] => Next_State.OUTPUTSELECT
state[0] <= Present_State[0].DB_MAX_OUTPUT_PORT_TYPE
state[1] <= Present_State[1].DB_MAX_OUTPUT_PORT_TYPE
state[2] <= Present_State[2].DB_MAX_OUTPUT_PORT_TYPE
state[3] <= Present_State[3].DB_MAX_OUTPUT_PORT_TYPE
state[4] <= Present_State[4].DB_MAX_OUTPUT_PORT_TYPE
state[5] <= Present_State[5].DB_MAX_OUTPUT_PORT_TYPE


|Top|generic_counter_Time:Timing_Counter
clk => output~reg0.CLK
clk => count_sig[0].CLK
clk => count_sig[1].CLK
clk => count_sig[2].CLK
clk => count_sig[3].CLK
clk => count_sig[4].CLK
clk => count_sig[5].CLK
clk => count_sig[6].CLK
clk => count_sig[7].CLK
clk => count_sig[8].CLK
clk => count_sig[9].CLK
clk => count_sig[10].CLK
clk => count_sig[11].CLK
clk => count_sig[12].CLK
clk => count_sig[13].CLK
clk => count_sig[14].CLK
clk => count_sig[15].CLK
clk => count_sig[16].CLK
clk => count_sig[17].CLK
clk => count_sig[18].CLK
clk => count_sig[19].CLK
reset => output~reg0.ACLR
reset => count_sig[0].ACLR
reset => count_sig[1].ACLR
reset => count_sig[2].ACLR
reset => count_sig[3].ACLR
reset => count_sig[4].ACLR
reset => count_sig[5].ACLR
reset => count_sig[6].ACLR
reset => count_sig[7].ACLR
reset => count_sig[8].ACLR
reset => count_sig[9].ACLR
reset => count_sig[10].ACLR
reset => count_sig[11].ACLR
reset => count_sig[12].ACLR
reset => count_sig[13].ACLR
reset => count_sig[14].ACLR
reset => count_sig[15].ACLR
reset => count_sig[16].ACLR
reset => count_sig[17].ACLR
reset => count_sig[18].ACLR
reset => count_sig[19].ACLR
output <= output~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top|generic_counter_Angle:Angle_Counter
clk => Min_Interrupt~reg0.CLK
clk => Max_Interrupt~reg0.CLK
clk => PWM~reg0.CLK
clk => Angle_Count[0].CLK
clk => Angle_Count[1].CLK
clk => Angle_Count[2].CLK
clk => Angle_Count[3].CLK
clk => Angle_Count[4].CLK
clk => Angle_Count[5].CLK
clk => Angle_Count[6].CLK
clk => Angle_Count[7].CLK
reset => PWM~reg0.ACLR
reset => Angle_Count[0].ACLR
reset => Angle_Count[1].ACLR
reset => Angle_Count[2].ACLR
reset => Angle_Count[3].ACLR
reset => Angle_Count[4].ACLR
reset => Angle_Count[5].ACLR
reset => Angle_Count[6].ACLR
reset => Angle_Count[7].ACLR
reset => Min_Interrupt~reg0.ENA
reset => Max_Interrupt~reg0.ENA
Angle1[0] => LessThan1.IN8
Angle1[1] => LessThan1.IN7
Angle1[2] => LessThan1.IN6
Angle1[3] => LessThan1.IN5
Angle1[4] => LessThan1.IN4
Angle1[5] => LessThan1.IN3
Angle1[6] => LessThan1.IN2
Angle1[7] => LessThan1.IN1
Angle2[0] => LessThan0.IN8
Angle2[1] => LessThan0.IN7
Angle2[2] => LessThan0.IN6
Angle2[3] => LessThan0.IN5
Angle2[4] => LessThan0.IN4
Angle2[5] => LessThan0.IN3
Angle2[6] => LessThan0.IN2
Angle2[7] => LessThan0.IN1
Timer => PWM.OUTPUTSELECT
Timer => Max_Interrupt.OUTPUTSELECT
Timer => Min_Interrupt.OUTPUTSELECT
Timer => Angle_Count[7].ENA
Timer => Angle_Count[6].ENA
Timer => Angle_Count[5].ENA
Timer => Angle_Count[4].ENA
Timer => Angle_Count[3].ENA
Timer => Angle_Count[2].ENA
Timer => Angle_Count[1].ENA
Timer => Angle_Count[0].ENA
Max_Interrupt <= Max_Interrupt~reg0.DB_MAX_OUTPUT_PORT_TYPE
Min_Interrupt <= Min_Interrupt~reg0.DB_MAX_OUTPUT_PORT_TYPE
PWM <= PWM~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top|double_dabble:The_Seperation
binIN[0] => ones[0].DATAIN
binIN[1] => LessThan15.IN8
binIN[1] => Add15.IN8
binIN[1] => bcd.DATAA
binIN[2] => LessThan12.IN8
binIN[2] => Add12.IN8
binIN[2] => bcd.DATAA
binIN[3] => LessThan9.IN8
binIN[3] => Add9.IN8
binIN[3] => bcd.DATAA
binIN[4] => LessThan7.IN8
binIN[4] => Add7.IN8
binIN[4] => bcd.DATAA
binIN[5] => LessThan5.IN8
binIN[5] => Add5.IN8
binIN[5] => bcd.DATAA
binIN[6] => LessThan3.IN8
binIN[6] => Add3.IN8
binIN[6] => bcd.DATAA
binIN[7] => LessThan2.IN8
binIN[7] => Add2.IN8
binIN[7] => bcd.DATAA
binIN[8] => LessThan1.IN8
binIN[8] => Add1.IN8
binIN[8] => bcd.DATAA
binIN[9] => LessThan0.IN6
binIN[9] => Add0.IN6
binIN[9] => bcd.DATAA
binIN[10] => LessThan0.IN5
binIN[10] => Add0.IN5
binIN[10] => bcd.DATAA
binIN[11] => LessThan0.IN4
binIN[11] => Add0.IN4
binIN[11] => bcd.DATAA
ones[0] <= binIN[0].DB_MAX_OUTPUT_PORT_TYPE
ones[1] <= bcd.DB_MAX_OUTPUT_PORT_TYPE
ones[2] <= bcd.DB_MAX_OUTPUT_PORT_TYPE
ones[3] <= bcd.DB_MAX_OUTPUT_PORT_TYPE
tens[0] <= bcd.DB_MAX_OUTPUT_PORT_TYPE
tens[1] <= bcd.DB_MAX_OUTPUT_PORT_TYPE
tens[2] <= bcd.DB_MAX_OUTPUT_PORT_TYPE
tens[3] <= bcd.DB_MAX_OUTPUT_PORT_TYPE
hundreds[0] <= bcd.DB_MAX_OUTPUT_PORT_TYPE
hundreds[1] <= bcd.DB_MAX_OUTPUT_PORT_TYPE
hundreds[2] <= bcd.DB_MAX_OUTPUT_PORT_TYPE
hundreds[3] <= bcd.DB_MAX_OUTPUT_PORT_TYPE


|Top|BCD:The_Dab_Display0
clk => Hex[0]~reg0.CLK
clk => Hex[1]~reg0.CLK
clk => Hex[2]~reg0.CLK
clk => Hex[3]~reg0.CLK
clk => Hex[4]~reg0.CLK
clk => Hex[5]~reg0.CLK
clk => Hex[6]~reg0.CLK
reset => Hex[0]~reg0.PRESET
reset => Hex[1]~reg0.PRESET
reset => Hex[2]~reg0.PRESET
reset => Hex[3]~reg0.PRESET
reset => Hex[4]~reg0.PRESET
reset => Hex[5]~reg0.PRESET
reset => Hex[6]~reg0.PRESET
Bin[0] => Mux0.IN19
Bin[0] => Mux1.IN19
Bin[0] => Mux2.IN19
Bin[0] => Mux3.IN19
Bin[0] => Mux4.IN19
Bin[0] => Mux5.IN19
Bin[0] => Mux6.IN19
Bin[1] => Mux0.IN18
Bin[1] => Mux1.IN18
Bin[1] => Mux2.IN18
Bin[1] => Mux3.IN18
Bin[1] => Mux4.IN18
Bin[1] => Mux5.IN18
Bin[1] => Mux6.IN18
Bin[2] => Mux0.IN17
Bin[2] => Mux1.IN17
Bin[2] => Mux2.IN17
Bin[2] => Mux3.IN17
Bin[2] => Mux4.IN17
Bin[2] => Mux5.IN17
Bin[2] => Mux6.IN17
Bin[3] => Mux0.IN16
Bin[3] => Mux1.IN16
Bin[3] => Mux2.IN16
Bin[3] => Mux3.IN16
Bin[3] => Mux4.IN16
Bin[3] => Mux5.IN16
Bin[3] => Mux6.IN16
Hex[0] <= Hex[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex[1] <= Hex[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex[2] <= Hex[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex[3] <= Hex[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex[4] <= Hex[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex[5] <= Hex[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex[6] <= Hex[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top|BCD:The_Dab_Display1
clk => Hex[0]~reg0.CLK
clk => Hex[1]~reg0.CLK
clk => Hex[2]~reg0.CLK
clk => Hex[3]~reg0.CLK
clk => Hex[4]~reg0.CLK
clk => Hex[5]~reg0.CLK
clk => Hex[6]~reg0.CLK
reset => Hex[0]~reg0.PRESET
reset => Hex[1]~reg0.PRESET
reset => Hex[2]~reg0.PRESET
reset => Hex[3]~reg0.PRESET
reset => Hex[4]~reg0.PRESET
reset => Hex[5]~reg0.PRESET
reset => Hex[6]~reg0.PRESET
Bin[0] => Mux0.IN19
Bin[0] => Mux1.IN19
Bin[0] => Mux2.IN19
Bin[0] => Mux3.IN19
Bin[0] => Mux4.IN19
Bin[0] => Mux5.IN19
Bin[0] => Mux6.IN19
Bin[1] => Mux0.IN18
Bin[1] => Mux1.IN18
Bin[1] => Mux2.IN18
Bin[1] => Mux3.IN18
Bin[1] => Mux4.IN18
Bin[1] => Mux5.IN18
Bin[1] => Mux6.IN18
Bin[2] => Mux0.IN17
Bin[2] => Mux1.IN17
Bin[2] => Mux2.IN17
Bin[2] => Mux3.IN17
Bin[2] => Mux4.IN17
Bin[2] => Mux5.IN17
Bin[2] => Mux6.IN17
Bin[3] => Mux0.IN16
Bin[3] => Mux1.IN16
Bin[3] => Mux2.IN16
Bin[3] => Mux3.IN16
Bin[3] => Mux4.IN16
Bin[3] => Mux5.IN16
Bin[3] => Mux6.IN16
Hex[0] <= Hex[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex[1] <= Hex[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex[2] <= Hex[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex[3] <= Hex[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex[4] <= Hex[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex[5] <= Hex[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex[6] <= Hex[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top|BCD:The_Dab_Display2
clk => Hex[0]~reg0.CLK
clk => Hex[1]~reg0.CLK
clk => Hex[2]~reg0.CLK
clk => Hex[3]~reg0.CLK
clk => Hex[4]~reg0.CLK
clk => Hex[5]~reg0.CLK
clk => Hex[6]~reg0.CLK
reset => Hex[0]~reg0.PRESET
reset => Hex[1]~reg0.PRESET
reset => Hex[2]~reg0.PRESET
reset => Hex[3]~reg0.PRESET
reset => Hex[4]~reg0.PRESET
reset => Hex[5]~reg0.PRESET
reset => Hex[6]~reg0.PRESET
Bin[0] => Mux0.IN19
Bin[0] => Mux1.IN19
Bin[0] => Mux2.IN19
Bin[0] => Mux3.IN19
Bin[0] => Mux4.IN19
Bin[0] => Mux5.IN19
Bin[0] => Mux6.IN19
Bin[1] => Mux0.IN18
Bin[1] => Mux1.IN18
Bin[1] => Mux2.IN18
Bin[1] => Mux3.IN18
Bin[1] => Mux4.IN18
Bin[1] => Mux5.IN18
Bin[1] => Mux6.IN18
Bin[2] => Mux0.IN17
Bin[2] => Mux1.IN17
Bin[2] => Mux2.IN17
Bin[2] => Mux3.IN17
Bin[2] => Mux4.IN17
Bin[2] => Mux5.IN17
Bin[2] => Mux6.IN17
Bin[3] => Mux0.IN16
Bin[3] => Mux1.IN16
Bin[3] => Mux2.IN16
Bin[3] => Mux3.IN16
Bin[3] => Mux4.IN16
Bin[3] => Mux5.IN16
Bin[3] => Mux6.IN16
Hex[0] <= Hex[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex[1] <= Hex[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex[2] <= Hex[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex[3] <= Hex[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex[4] <= Hex[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex[5] <= Hex[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex[6] <= Hex[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


